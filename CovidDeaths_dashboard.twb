<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidDeaths_dashboard' path='/t/saurabhbudhwaniportfolio/workbooks' revision='1.1' site='saurabhbudhwaniportfolio' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (TableauTable1-globaldeaths)' inline='true' name='federated.1leqhrj13kujcm1bcgc8r01rmul3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable1-globaldeaths' name='excel-direct.1exvg0d1tccspc1goqv251s30ktq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Saurabh/Desktop/Data_analysis/Covid_data_analysis/TableauTable1-globaldeaths.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1exvg0d1tccspc1goqv251s30ktq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.420472' measure-ordering='alphabetic' measure-percentage='0.579528' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (TableauTable3_countrybaseddeaths)' inline='true' name='federated.1g4d7r01pf83du1b6sl3r0m66wl4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable3_countrybaseddeaths' name='excel-direct.1yglzny1hgtucf12y1ljs1lnu8p9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Saurabh/Desktop/Data_analysis/Covid_data_analysis/TableauTable3_countrybaseddeaths.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1yglzny1hgtucf12y1ljs1lnu8p9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D228:no:A1:D228:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentagePopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentagePopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentagePopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentagePopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D228:no:A1:D228:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.398425' measure-ordering='alphabetic' measure-percentage='0.601575' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (TablueTable4_deathsbylocationpopulationdate)' inline='true' name='federated.1gtjwtx18nzzr810fzuw101ofvrp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TablueTable4_deathsbylocationpopulationdate' name='excel-direct.1bxyqe50rn4xbm19u7ckz1pvg4v9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Saurabh/Desktop/Data_analysis/Covid_data_analysis/TablueTable4_deathsbylocationpopulationdate.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1bxyqe50rn4xbm19u7ckz1pvg4v9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentagePopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentagePopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentagePopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentagePopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.459843' measure-ordering='alphabetic' measure-percentage='0.540157' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Sheet1 (TableauTable2_locationdeathcount) (2)' inline='true' name='federated.08ogrjx1fypkr819bq5td0v31ijw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable2_locationdeathcount' name='excel-direct.1uz2g9v19oy764172rk2q02bw5fh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Saurabh/Desktop/Data_analysis/Covid_data_analysis/TableauTable2_locationdeathcount.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1uz2g9v19oy764172rk2q02bw5fh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCounts' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCounts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCounts]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCounts</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.480315' measure-ordering='alphabetic' measure-percentage='0.519685' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (TableauTable2_locationdeathcount)' inline='true' name='federated.1pjr9oe1awm2h11cf33xq0qpqirg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable2_locationdeathcount' name='excel-direct.0itfss817ryswb10ed4qc02qcerv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Saurabh/Desktop/Data_analysis/Covid_data_analysis/TableauTable2_locationdeathcount.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='TableauTable2_locationdeathcount (2)' name='excel-direct.03aphnd11qo5lo13d4vp613luxik'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Saurabh/Desktop/Data_analysis/Covid_data_analysis/TableauTable2_locationdeathcount.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[Location]' />
              <expression op='[Sheet11].[Location]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0itfss817ryswb10ed4qc02qcerv' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
              <column datatype='string' name='Location' ordinal='0' />
              <column datatype='integer' name='TotalDeathCounts' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.03aphnd11qo5lo13d4vp613luxik' name='Sheet11' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
              <column datatype='string' name='Location' ordinal='0' />
              <column datatype='integer' name='TotalDeathCounts' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Location (Sheet11)]' value='[Sheet11].[Location]' />
          <map key='[Location]' value='[Sheet1].[Location]' />
          <map key='[TotalDeathCounts (Sheet11)]' value='[Sheet11].[TotalDeathCounts]' />
          <map key='[TotalDeathCounts]' value='[Sheet1].[TotalDeathCounts]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCounts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCounts]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCounts</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCounts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCounts (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>TotalDeathCounts</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Location (Sheet11)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[TotalDeathCounts (Sheet11)]' role='measure' type='quantitative' />
      <column-instance column='[Location (Sheet11)]' derivation='None' name='[none:Location (Sheet11):nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Saurabh/Documents/My Tableau Repository/Datasources/Sheet1 (TableauTable2_locationdeathcount).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/10/2021 07:19:53 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Location (Sheet11)]' value='[Extract].[Location]' />
            <map key='[Location]' value='[Extract].[Location1]' />
            <map key='[TotalDeathCounts (Sheet11)]' value='[Extract].[TotalDeathCounts]' />
            <map key='[TotalDeathCounts]' value='[Extract].[TotalDeathCounts1]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (TableauTable2_locationdeathcount)' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2021-06-10 07:19:53.407' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location1</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCounts1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCounts]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCounts1</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location (Sheet11)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet11</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCounts</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCounts (Sheet11)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCounts</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet11</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[TotalDeathCounts (Sheet11)]' included-values='in-range'>
          <min>1105</min>
          <max>1082304</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.480315' measure-ordering='alphabetic' measure-percentage='0.519685' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location (Sheet11):nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable1-globaldeaths)' name='federated.1leqhrj13kujcm1bcgc8r01rmul3' />
          </datasources>
          <datasource-dependencies datasource='federated.1leqhrj13kujcm1bcgc8r01rmul3'>
            <column datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1leqhrj13kujcm1bcgc8r01rmul3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1leqhrj13kujcm1bcgc8r01rmul3].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1leqhrj13kujcm1bcgc8r01rmul3].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1leqhrj13kujcm1bcgc8r01rmul3].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1leqhrj13kujcm1bcgc8r01rmul3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1leqhrj13kujcm1bcgc8r01rmul3].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1leqhrj13kujcm1bcgc8r01rmul3].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1leqhrj13kujcm1bcgc8r01rmul3].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1leqhrj13kujcm1bcgc8r01rmul3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1leqhrj13kujcm1bcgc8r01rmul3].[:Measure Names]' value='218' />
            <format attr='height' value='41' />
            <format attr='text-format' field='[federated.1leqhrj13kujcm1bcgc8r01rmul3].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1leqhrj13kujcm1bcgc8r01rmul3].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1leqhrj13kujcm1bcgc8r01rmul3].[:Measure Names]' value='12' />
            <format attr='background-color' data-class='subtotal' value='#e9f3f2' />
            <format attr='background-color' scope='cols' value='#ddebf0' />
            <format attr='background-color' scope='rows' value='#ff0000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#1b1b1b' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1leqhrj13kujcm1bcgc8r01rmul3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1leqhrj13kujcm1bcgc8r01rmul3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9B49D17B-7581-47EB-9FD6-AE8071A2F5F7}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total death counts of continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable2_locationdeathcount)' name='federated.1pjr9oe1awm2h11cf33xq0qpqirg' />
          </datasources>
          <datasource-dependencies datasource='federated.1pjr9oe1awm2h11cf33xq0qpqirg'>
            <column datatype='string' name='[Location (Sheet11)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[TotalDeathCounts]' role='measure' type='quantitative' />
            <column-instance column='[Location (Sheet11)]' derivation='None' name='[none:Location (Sheet11):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCounts]' derivation='Sum' name='[sum:TotalDeathCounts:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location (Sheet11):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[sum:TotalDeathCounts:qk]' field-type='quantitative' max='1250062' min='681852' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location:nk]' value='137' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location (Sheet11):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1754143238067627' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[sum:TotalDeathCounts:qk]</rows>
        <cols>[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{F32024DC-068A-466A-8815-38F6E81B226A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable3_countrybaseddeaths)' name='federated.1g4d7r01pf83du1b6sl3r0m66wl4' />
            <datasource caption='Sheet1 (TablueTable4_deathsbylocationpopulationdate)' name='federated.1gtjwtx18nzzr810fzuw101ofvrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1g4d7r01pf83du1b6sl3r0m66wl4'>
            <column aggregation='None' datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[PercentagePopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentagePopulationInfected]' derivation='Sum' name='[sum:PercentagePopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1gtjwtx18nzzr810fzuw101ofvrp'>
            <column datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
            <column-instance column='[HighestInfectionCount]' derivation='Max' name='[max:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[Longitude (generated)]' field-type='quantitative' max='28140661.086705998' min='-24301739.521273986' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[Latitude (generated)]' field-type='quantitative' max='21447900.681295909' min='-12489719.577856384' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[sum:PercentagePopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[sum:PercentagePopulationInfected:qk]' />
              <lod column='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[none:Location:nk]' />
              <lod column='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[max:HighestInfectionCount:qk]' />
              <geometry column='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[Latitude (generated)]</rows>
        <cols total='true'>[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D38E80D2-7A43-4FD6-933E-52579CB5F166}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TablueTable4_deathsbylocationpopulationdate)' name='federated.1gtjwtx18nzzr810fzuw101ofvrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1gtjwtx18nzzr810fzuw101ofvrp'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='real' name='[PercentagePopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentagePopulationInfected]' derivation='Avg' name='[avg:PercentagePopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentagePopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentagePopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentagePopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]' />
              <text column='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]' />
              <color column='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Forecast Indicator:nk]' />
              <text column='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[fVal:avg:PercentagePopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[fVal:avg:PercentagePopulationInfected:qk]</rows>
        <cols>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{1BA16FEE-6709-4BA3-8141-22784E9B4825}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='8' param='horz' type='layout-flow' w='99018' x='491' y='978'>
            <zone h='98044' id='6' type='layout-basic' w='89190' x='491' y='978'>
              <zone h='34108' id='12' name='Sheet 5' w='89190' x='491' y='64914'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17482' id='16' name='Sheet 1' w='44595' x='491' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46454' id='17' name='Sheet 3' w='44595' x='491' y='18460'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='63936' id='19' name='Sheet 4' w='44595' x='45086' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98044' id='14' is-fixed='true' type='layout-basic' w='9828' x='89681' y='978'>
              <zone h='57090' id='15' param='vert' type='layout-flow' w='9828' x='89681' y='978'>
                <zone h='8924' id='20' name='Sheet 4' pane-specification-id='0' param='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[sum:PercentagePopulationInfected:qk]' type='color' w='9828' x='89681' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='40954' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]&#10;[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Forecast Indicator:nk]' type='color' w='9828' x='89681' y='58068'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='25' param='vert' type='layout-flow' w='99018' x='491' y='978'>
                <zone fixed-size='132' h='17482' id='16' is-fixed='true' name='Sheet 1' w='44595' x='491' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63936' id='19' is-fixed='true' name='Sheet 4' w='44595' x='45086' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8924' id='20' name='Sheet 4' pane-specification-id='0' param='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[sum:PercentagePopulationInfected:qk]' type='color' w='9828' x='89681' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46454' id='17' is-fixed='true' name='Sheet 3' w='44595' x='491' y='18460'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='34108' id='12' is-fixed='true' name='Sheet 5' w='89190' x='491' y='64914'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40954' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]&#10;[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Forecast Indicator:nk]' type='color' w='9828' x='89681' y='58068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6C470DD9-BE78-4B5A-AE4F-1BF6EDC9F619}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='141'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1leqhrj13kujcm1bcgc8r01rmul3].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77F61B09-D409-46E4-9ABD-D8E25D03A076}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location (Sheet11):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location (Sheet11):nk]</field>
            <field>[federated.1pjr9oe1awm2h11cf33xq0qpqirg].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4444DAE-F528-4947-BF43-7AE503FD780C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[sum:PercentagePopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g4d7r01pf83du1b6sl3r0m66wl4].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{9E026973-0956-4607-93E5-4089A6845992}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]&#10;[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Forecast Indicator:nk]</field>
            <field>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]</field>
            <field>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC70AC54-498A-45C1-BF98-6B26A0984CDC}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='16' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Forecast Indicator:nk]</field>
              <field>[federated.1gtjwtx18nzzr810fzuw101ofvrp].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <device-preview visible='true' />
      <simple-id uuid='{46AC1038-7ADF-45FA-858C-C092152903CA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='65' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAeMUlEQVR4nO3da2xk533f8e85Z+4zJGeGHN5vy9uudle7K3l1sSTHlizZjh0nbZMgNRA0
      RVIgQJE0TVIHqdEWBoKmL1qkBdog6Ys6gdsiaZrGdoLEl8TWxZYs67Kr5WqX9+GQnOEMORfO
      febMuTx9wdVKzKwkksvLcuf5AMKK5DmHf5LnN/M8z3nOcxQhhECSWpR63AVI0nE6kABYlnUQ
      h5GkIyffAaSWJgMgtTQZAKmlyQBILW1PAaiV8ywsRjFtQbWYY6tUO6y6JOlIOPaysSlUOgMK
      qUyJ8sYCwjdKMOABQF5OkE6iPQXAqJXJ1R20qxuUG4JKNcPpUxFs25YBkE6kPQVgayuPYav4
      To1xuX+AjbyFqqoIIdA07bBqlKRDoxzEVAjLsmQApBNJjgJJLU0GQGppMgBSS5MBkFqaDIDU
      0mQApJYmAyC1NBkAqaXJAEgtbU9TIdLJNVLpLF3d/WzlMmguP6cnRg6rNkk6dHsKQGekh+xW
      gbaOEIpRpaF5sW1bToaTTqw9BeDGtat4Qj3UsmtEN8pMjYXkZDjpRNvTZLiGXscwbVwuJ41G
      A4fThdvllJPhpBNLzgaVWpocBZJamgyA1NJkAKSWJgMgtTQZAKmlyQBILU0GQGppMgBSS9tT
      ADKpOG+//TaFYpHr09OkMoXDqkuSjsSergTbtk0iNk+pYDJ04Ryp6CLj4+NYloWiKIdZpyQd
      ij1NhkusLOHrHCLg3qBULGOYQk6Gk060PTWBnE4Xm+trOMODWIU0Y+Pjh1WXJB0JORlOamly
      FEhqaTIAUkuTAZBamgyA1NJkAKSWJgMgtTQZAKmlyQBILW1PATD0GuupTWxTZ35ullyxclh1
      SdKR2NNcoHpdJ5vN4LfLqIEw6/E4oQemEELIleGkE2lPAWjrCOJMpTBsDduoomna7ZPftu3D
      qlGSDs2eF8etlCt0dXZiFtMEu3rlbFDpRJOT4aSWJkeBpJYmAyC1NBkAqaXJAEgtbcco0Mr8
      NN9+8VW6u8JEhs7y5OWzx1WXJB2JHQEYmbrAg+tJinUTl8t5XDVJ0pFpug4QDIXQbCdd7b7j
      qEeSjlRTH2CrUOTGmy+TzMpFr6T7X9OFsI2NdbzeAHVdpzsS2bGxEDbVWh2/10thK4vD24bf
      65YXwqQTa8c7QHUrxZ//+f/jpZdeJF3QmzbeymwyM79IdSvJUiJDwzCPrFBJOgxN7wDT09d4
      8NwZ5hbjnDndvPDV7NwsHYpF0RvCKBU5e2ZKLo0onVhNnWChl/jmt/+WiXOPNG2cTq6RyWTo
      fuAMtdUEHZ3dcjKcdKI1BcCyTNrCnZjVEtCz42uRviEifUMAhMNdR1KgJB2m5ivBisb89JvU
      xZ5mSkvSibSjDzB99XW2ShUmxidpD3XS5vPs6iByFEg6qXa8A0xNTYEQ5HI5qrXmUSBJut/s
      CIDH34HQS6ysrFAoyRvepftfcx/AFpimiW3Lm9yl+9+Onm5ieQ7T4ScQAJdLdoKl+9+Os7xn
      8BQ2Gsl0DpdTzgaV7n87mkAOp4uVtRVCoRBetwyAdP9r6gM4jCpf+8ZfkcoWj6MeSTpSTQHQ
      FRc/9RPPUdzaato4l07y2tVpEILozde5ubR5JEVK0mFp6ul2h8PEYnGmLjzatHE40kd7rkAx
      k6SuuND1OrZtY9u2XBpROpF2BGB5bpqNXIF8oUilWgU6d2ycTq4RX4sTCl0k6PeQyJtyMpx0
      ou2YCiFsm5nZm0yOjzG/tMa5s6d3dRA5FUI6qXa8A9SLaa5efYu1eIqHH3viuGqSpCOzoxPs
      DfZwZmyQzfUoy2up46pJko5M0yiQMxAi3OHH0mvHUY8kHakdTaDozSvM3FxACI2RjvbjqkmS
      jsyOAIydfZhqXWdtI4/LKecCSfe/prN8YGScYFeJRDoLI33HUZMkHZmmPkBqLcprb1xnZGz0
      GMqRpKPVFICNTI6B/i5WV9aOox5JOlJNAdCwSaY2mb32Bqmt6nHUJElHpikAXZFuNM3Bx579
      LL2hnQvk5rMbXJ9ZwKiVuXnzJksriSMrVJIOQ1MnOJ3NMzk+ykYqyamBnXOB2oJdODNbODx+
      eiMh8jUhJ8NJJ9qOAKRTCQYGB8iUBJcvNT8cI7e5TiKRIOj3cG1uhfPnzsnJcNKJtmMy3Msv
      fAvF1c7i4gJPf+onGOrt/KB9b5OT4aSTakcf4OJDj+HRTEbGJrFM+eR36f729ttv7wxAoCNE
      tSHQ7DLr8dXjqkuSjkSxWGweBRrpj5DaLDE8No7s1kr3s0Ag0ByAxcVFwqE2vvkXf0oslT+O
      uiTpSDz44IPNAQiHwuh6gwcfuozHKTu20v1LUZTmALg9bqrlEv7OXvo6246jLkk6Mk0BKDeg
      ze+gdIdlUSTpfrPjQpgQgmCwg7HRj5GW84CkFrDjHaBW2OD551/g1dev4PZ3HFdNknRkdgTA
      F+zl0gNjNPQG9Xq9aeOtTIrpm3OYtQJvvTXN6nr6yAqVpMPQNBmuUCzT3tGB+w6L4wY7e9jI
      5tlMpJm8+CDJxSVsu1NOhpNOrKYADA70kdM1FKv5hK5VShSLRbr6I8Rja9hClZPhpBOtKQCZ
      Yo1yIY0tHIwO73xMqm0LRkdGCQRDOCsl/O2hIytUkg5D05Pi08k1Eqk0wxNnCbfJp0RK97em
      6wAzC4tMTgwzNzN7HPVI0pFqCoDPqfLG1TkuXDx/HPVI0pFqCkAhnSSeTLKW2DiOeiTpSDV1
      gvuGT9GBG5cqhzWl+5sQojkA+WKRmzMznHvkOeTaWNL9KF+r8cryEq8sR3eOAunlPK++Oc25
      iw/T2eFHUZRdHVCOAkn3umqjwVuJOD+ILpIul3l89BSfmJja+Q4wff06585OsrgUpesjF46r
      Vkk6EIZlMbe5wQuLC0QzaS70D/BzD11mMBhEU7e7vzsCEPA6+O73XkLXdQIdIc5PDB1L4ZJ0
      N2zb5gfLS3zj+jRjnV18YmKSX37iKZx3aKU0XQiD7WeFmbbA6bhzs8asl5ldjBHu6ac/EpZN
      IOmeUWk0+P3vv4hDU/nFxz5K0Ov7wO3v+BAAo1Ygtllh6tTgHXeqFfPYmotivkBvZxDblkuo
      SMdLCMG19QT/843X+NmLD/HYyCiKomBZ1gfu1xSA57/1dQo1k42NPIGf/cf0dwaadqpWanT2
      9JBbT2zfV6luT4qTpONQaTT46uuvkqtW+dJznyESaD5n309TALxeHw0MpqY6aRjGHXfqGhom
      Go0xODxye6RotyNGknRQhBDMbm7wlVdf4Zmp0/zyEw/c7tzuVlMAAoEAFWwuP/IIbT73HXfS
      HG4mp3b3DGFJOgy6afK16be4mUryG5/4JH0d+7uDsSkuLpeLUjbJ3HL8rouUpMMQy2b5N3/9
      lyiKwr/99Gf3ffLDHd4BunoH6MlXaA98cO9Zko7D16ev8Uosyj9/6scYDXfeddN7RwCufP+b
      vL6Qoa+vh8eGeu/qwJJ0kGwh+JM3X8cWgt/57OdxOw7mKaY7mkAXHn+GZ596GKFXWJJPipfu
      EbYQ/OmVNyjW6/z85UcP7OSH97kQtlfyQph0WIQQfHPmBjdSSX7948/gOODzTA7eS/e0V2PL
      vBqL8asf+8SBn/wgAyDdw66vr/P169f44jPP4nE2L9NzEGQApHvScjbD//jRy3zxmedo8+xu
      cYb92FdvQghBci2Gp6ObcIf/oGuSWlyqWOC/ff9FfuMTn6RrD9MaPowQNmajTDEzQzE7R37j
      2v4CUN5YZSVT4nSw+8CKkySAYr3Gf3r+u/zS408wHArf1bGEbVEtJdhKXSW/eY1Sdh7V4aEt
      NE6w5xJTj/zq/kaBNhdvYETGKSSinDlzBsuy5Fwg6a7VTYPf+c63+OmLl3h4YP/3othWg+Xp
      Pya9+iKB4AgdkfN0dF8gED6Nqu7sS+wrALalM3NznmCkj4HeLjkMKt013TT5zy98l8vDI3xy
      8vS+XlCFEOSSbzD32n+hb/wzDJ/5GTSn9wP3kdcBpGNnC8Ef/OAletra+OmLD+3r5K9XNlh4
      4/cxjRqnH/uX+NoGdrXfwV1Sk6R9ELemODg0lX+0j5Pftk3ic18nMfcNTl38p/SMPrPrYwgh
      5DuAdHyEEPzl29MsZtL8+ic+ibrHk7+QmWHuR79HR+Q845d+CYdr9yNGxYrO138wK98BpOPz
      wuIC0+sJfuuTn9rTyW80yiy++QdU8jHOPPabtHXuvs9QrRt867VFfnQzwY8/NiHfAaTj8cLC
      PN+Zm+FLz32GgPvON17dSWr571i+9scMnvmHDEz9ZNOozvup6gbfu7LMy9fX+PjFEZ5+aBS3
      yyEDIB0tIQQvLS3yrZkbfOm5z+z6Kq8QNtG3/ohqKc7U5V/B7evc1X71hsl334zy/NUYj58d
      5Mcfn8Dvcd3+ugyAdGSEEPwgusRf3Zjm3336c7t+5RdCEL32R9RL65x96ksoyofP4GmYFi9c
      jfHt1xb5yOl+Pv/E1B1v8ZUBkI7Mi4sLfG9hjn/97Kf3NLlt5cb/YSv1Jhee/l1U9f27rUII
      Yqk837sS42YszUdO973vif8OGQDpSLy4uMALi/N88Znn8LlcH77DLeuLf0Mq+rdcfOZ30Rx3
      vqhVKNd55cYaL19fo93v5umHRrk43ovL+eHn5L4DYJkNLDRcDk0GQPpALy4u8OLiPL/5zLP4
      Xbvv8KbXXmH52ld46Lnfw+lu3/E1w7S4sZzmpWsrJHNlPnpukI+eGyQS3NvkzH3PBl2auYLh
      PcW5iZ4P30FqSe+0+Z9fmOOLn/wU/l2+8gshyG9Os3jlD3n4PSe/EILNrQrfvbLM9egmwz0d
      fOrRcSYHwmja/mb27ysAmbVF0mUDq5bFtiPyOcHSHb28HOXvFub4raefxa2qmKa5q/3K+Sgz
      P/yPPPjxf4/mCqI3DG7G0nzvaoxK3eCp80N8/uefxOvaPn2FsDHN/S3Pua8mkLBtbKPIyqbJ
      2JCcDCc1+/7SIn83P8tvP/tpvHvo8NZKSa5859d48OnfJdfo4oWrMaaXNnhgpIuPXRzh9NDd
      L4XyXrITLB247y8t8r2FOf7VHtv89UqaF//6t9l0foaZdJjODi9Pnh/m4kQPXvfh3BIpAyAd
      mHfa/N9dmOOLTz+Lfxfj/EIIarrJlfkk33r5NdB8PHlxisfODhAKeA79PhM5F0i6a0IIksUC
      f3LlDXTD5Isf8sovhKBhWsyuZHjx2gor62lC+nf4wuf+CWfPfORIb66SAZDuSrFe5y+uXWVm
      I8XPXHqYy0PD73sCV+sG09ENXnl7jfhmkdPDXTxzaQgj+DU6+55i+IHLR1y9bAJJ+6SbBl+/
      Ps0Pl6N87tx5np48jePvLU0uhCBXrHFlPslrswlK1QYXJ3p5/OwAQ90dqIrNzZf/A95AL2OX
      /tmx3FYrAyDtScM0+UF0iW/P3uSjp8b41OkHdlzZtW3BerbEazMJri1t4FAVLk30cmmyl/6u
      ttvr99fLGyxe/e84nAFOP/prKOrxnD8yANKu2EIwnYjzJ1feYLyri5976DIBl5tK3SCWyrOS
      yhNL5dnMV2nzubg43svDU31Egu+uMi6EoFHfInb9f1HYvM7ogz9PZPhju5rcdlhkAKQPJIRg
      Ib3JV1//EY2a4InBSSoli6X1HJWagcfl4FRfkMHudk71BhmMtON2NXctjUaJlev/m43Y84yc
      /wL9E59D1Q5naHMvZACkJoZpkciUWFrP8fpCnDeXEvQGOujvbGe8P8RYX4iR3iCdHV4UPvjx
      WJapk5j/BuuLf0P/xGcZmPopNMfurw0cNhmAFmfZNlulOtH1LRYTORYTOTYLFfo6A5wf6WZy
      sJOh7g78HiequvtOqmXWSS59m9WZ/0vP6NOMnP25Pd2ze1T2FQCzXmY+ukog2MVwf7cMwAlS
      0w3i6SIzKxnm41mWUjmqps5QdzuXxns5N9LDaCSE17W/5oltm6RXX2J5+qsEuy9w6sIv7Pru
      reOwv4WxbJtaOU8iXWbi1KBcGe4eJgTkSjWuR9O8Mb/OjfgGNWqc6uvg/Gg354d7meru3tN8
      nff7RoXNt4he+wqetmFOXfgFPP57f+nMfQWgUcqxtFnmzNjQ7YcRy3eAe0ehut2kuTqf4sbK
      JuWGzuhgGxNDYR4YijDe2YV3DzelfJhiZpb51/8rmsPD1KP/An/HyIEd+7Dt60qwjYpoVFjf
      zDLQ03XQNUl70DBNVrZyzCXSRON55layqJaDB0d7eHC8m88/NUU44N3z83N3o1JYIfrWVzAa
      JSYf+RXaO8+cuJaA7ASfMEIISrrO9HqCq8vrXJlN0ijDZE83l6f6uTTRS29nAMc+bxDZjXpl
      k+hbX6GYm2Ps4i8SGXryWMfy74YMwAlg2TaZSpnXVlZ4MxpndjmLVdZ4aGSQH7swwqXJXgLe
      g2vSvB9DL7J6889Ix19m5NwX6Bl5+p4Yy78bMgD3KMu2Wcpm+OFylNeXV1lbq6DWXFwY7OfJ
      88M8+sAAwcDhPTnlvYRtsXrzz1ib+xqDUz/J0AM//b43qJ80MgD3CFsINkslZjaSXFtP8EZ0
      ja2sgVv3cq63nyfPD/H4ucEjO+kB9FqWbPxVVmf/nMjgU4yc/wIO5/31AHUZgGNi2TapUpGZ
      VIrpZILVXI5KxcQoK1BzMtgR4olzQzx6ZmD7iusRdC5No0opO08m8SpbqSsAhPsuM3j6H5yI
      Ic39kAE4IqZlka6UuZFM8nZynbX8Fh7Nicf2UMtDvWLT3RHg0mQvD0300h3yH/pJb9sW9UqK
      TPwVtlJvUS2s0BaepGvoSYI9F3F7u+66BlvYWLb1nn8tLNtCN3V0S8eyTRpWA8NsYAsb0zYx
      LAPDamDaJpZtYdgGpmVi2ia2sGhYDRBg2ga2ELeObWIJC9u2bn9OCBvz1vd851jvbGPdqkMG
      4AAIIRBCYAqbsq6TrVRIFYukK2U2SyW2qlU2y0WCXh+DbWGMkkJhy2QzV2VqqJOHp3p5YCRy
      YB3Z7T+pACEQwgbE9h/drGE2ylSLa2TWXqaQmcHh8tM18Dhdgx/F1z58u1MrhEAgsG0bGxvd
      1KkZVaqNCtVGhUqjcvvjmlGjrJeom3XqRm375DZ1dLOOQKApGqqqbf+rqKiKisfpwe3w4FAd
      ODUnTs2FpqhoqgOn5sKlOXFoTlRFxalu/79DdaCpGk7NCSg4VQeKoqAqGpqqoakONEVFufU9
      VEVBUx2oiopDdeBQHaiqiqpot48lA7AHpm2TrZRJFYtslEpslIpkKxU2yyXqhoGqqvhdLiL+
      AD1t7YR9XnwOD5WyRSZbZ3oxQaOS4txohEfOdDPc3Y5tNQCBbTUQwkbYBkJsf2zbje0VOOwG
      trm9nWXpCNtC2Aa2ZWDbBsI2MY0Khl7CNCpYRmX7EjAKAoGCgqJqaA4PDlcAb9sAob7LOEMT
      lI06+doW+VqerVqWfHWLQr1AsZ7HsEy23wAU3A43XqcXn8uP3+XH5/Ljdfrwu/zbn3f68bp8
      eBxePA4PLocLt8ODdkzz/HdLBuDvqRkNctUq6XKZZD5DoZQhU9ggX9ygXEriNIt4RBUvVfwO
      hbBbJRLwIyxBoe4hV/OSqobJ1gPYzl58/jBd3iL9vk0GfXH8LoGigKI6t1+9NDegoGpOFEV9
      z+ddqJoLRdFQNSeq5gIUNM2NomooqnPHNg6nD83lx0RDR1BpVNmqbZ/M757gOXSjjmEbWLaN
      z+Uj6A3t+C/kC9PhCdLh7cCpuVAVdTtAJ+wC127tc10gi+jSIt0Do7T53CciALYQNMwGjUaV
      ar1MuZqnVM5QrWSoVtJUqzlKxSRGLYMDA79mE3C58PlCuN1BVGcQ1R1Gc0ew1HZqlp/VdI14
      tkG2pGNa0BeJMNIbZLQ3yFB3B8GAZ1frU75D3G7PvtPuNdBNnaqx3cyo6GXKeomKcasZopep
      GhXqRp2aUaVu1nE7PPhdftrc7XR4g4S8YUK+MEFviA5vEK/Tt93kuBW0VrevAGRXl7DCA+Ti
      a5w+PXF7MpyiKDtWiPuwjzF1rNm/BHt3K4YV7AA/0h8A3v3DWZaOevuQ4laT4tbhjRqVyib1
      aoZCpYDVKNHQywjLQMW+VZOKwxVEdQVRXCFMEcASTgzbgWEq6PUqmq3jMCs4rQoOq4KXOm0O
      nZGIj8FuP53tPgJeJ+Z7fo7GrToEAsPabtaYloFhv9vB0019Z6fPMm912CwMq4FhGTSsxu1m
      jNfpxe8O4HX6CLgC+N0BfE4/HqcHj8ODx+lFPaFXZI/LvuYCWZbA5Xahqe/pAJomqqpi2+8u
      Uffej98JyI6PLQvF3b7rAAi7Db+63RR41wd3HMORW8+bVax368LGseNjgYaFU7HwqXXcGLgV
      A7fSwKMogB+nJtdAvR/trwlkNZiZmaN7cIyuoP9ENIEk6U5kJ1hqabLBKLU0GQCppckASC1N
      BkBqaTIAUks7kNWh37kxHrZXjFB3ef/pOwNQu70iKYTY07Z7OfZe6t7r9od57L1uv5ff4WHX
      ci/8Xg5kGHSv3/RedFLrhpNb+71Q94EHQJJOkgOLX2YjwezsHJW6sbsdrAaFcu2OXxJCEI8t
      sby2TqWQY25hCcsWrMSWMW1BMh4jFk/uoTqbWGzljl8plUrktra2f4ZUgvnFKHq9yuzsLNWG
      wWp0kZVEitJWhrnFZY7q1SK+EsPc5TfTdR0A2zKILs6zvpkll06ytBJHr5aYm50lX64SX1ki
      mc4deK35zSQ3Z2cpVfVd71MsFt7nK4JkfIXF5TXqlQKzcwvoRoPowvbPtRZbIpXeOpjCOcAn
      xGTyJaYmJ5hbWCLg0aiYDoJehbKuEHBDrlinLeBkK5PH4XYRDoaIxtfp7u6hzSnIluqE2/2U
      GhYTI0N09fSxtLjMWtXBUE8Ha/FNiqUiPY0qWxVQ9Qz6YB+7WWa1kkmykS3Q01tjcWERT6AD
      n2ZhaV6cqk2+WCIcChEIhikVl5lbXGVycoS1tVWG+gZYXF6mXtYYCLmI53SGwoe7uKsw62Qy
      aVR/GMUo49QUVFVjPZkiGOnCqfixrQq1cgGHP8Ty7NucvvARusNt9A0MEl1ewaFqBFwqFTvE
      YH+E1fgqTlcbdjZNTyR8oKMfhWyR0akJYvNLhAJu8lWTcJubfM0i6FHJluoE/W6yuRw4PXR2
      9ZBYepv2yDAhv8ZmrkJPpJ18qcH4+Aihzh6yS4usxquM9HeylsoyMDDEUmwFh68Tcpv0RkIH
      UvuBNsC278QxiS3HaTR0CpU646eGiMVi2KZORRcMhgNERkeoFav0Do5i1avEYjFM06BYKDM8
      NAjAaizK4Ng4mqKgaiqKw0W73wOal3a3xWauwG67civrKVyiSmJ9E3+oG9GoU6kbDPX37Hgl
      Sifj+ML9BNzbdxghYGV5idFT4yiKgqapR/I85Gwqji401hMJCoUCxWKBVLrAxNgIlfIWpVKN
      fL6A0+WkXq/T0z9IT1cQhMVyNMbYxPitO6VUjHqZtY0iY6f6b98ldRgUVUVVFZZjMSxTJ12o
      MTk2TGx5+29bq1uMDHTSHhlGrxXp6h0ES2c5FkMYDfKlMgPDw6gC1teW6R86tf07V1WEbbO8
      HGV8YmL7nokD/Bm0L3/5y18+iAMJo8baeoqB4XF8bhXV6aWrw8d6ukBvJIghNLo6w/i8Xhwe
      Ly6Hg8LWBu2hbrqCAQyh0R3pwuf3omCSjG+gGxY9Xe2sJgsM9rSTWN/AsBU00aAj0ke4fRer
      DQuB6nAzNjGJ0EusrMWJ9A4Q6mjD692+2dzn8+Pz+dhMJanUdQYHeokuLTM41M9mJo9hWUSC
      fuKZOmND3bsO3n7VDcH4+Dgep4pDsSjWLHq72olGozj9EYS+hcvfjkOxUF0+gn4npZqFSzHJ
      bBUxbYUOn4OiAV7Vplyp4nC3YdW3cLeF6Qgc7MoOtqUTTyTpHxqh3evEUpz0draRSOXo7Q7d
      /tt7vR4cLjcel0Yln8XT3klPZwe6pdLTHcHn8aJikUxtUtEbDPV2Eo2nGewOktkqYtngMPJ4
      2sO0H9DP0FqdYNui2rDweQ5/EamD1qiVWVlPc+rUKI49LFMufbDWCoAk/T0nb/BYkg6QfE6w
      dM+xbQtQUABbgHbHhX4Fti3u+kKaDIB0z/nhN/+KbFsfI2qaNxIOfurj5zE0P27VZKvcYH3u
      TfxD54ndfJPzFx9hcnyU/Q4MyQBI9xzV4UdTdGpCw2eXefnKHEqjhG42cDtctHlVunt6WJgW
      zM9cY3hkCM8eVt94LxkA6Z7j9njobnMiTBf+didOUaPh9BH0+9EUiHQGWFtdIxQO477LM1iO
      AkktTY4CSS3t/wOdepSvvcGsIQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
